<?php
// DO NOT EDIT - This file was generated by the AI assistant.
include('../functions/db_connect.php');
session_start();
$theme_preference = $_SESSION['theme_preference'] ?? 'dark';
$room_type_id = isset($_GET['room_type_id']) ? intval($_GET['room_type_id']) : 0;
$room = null;
$services = [];
if ($room_type_id) {
    $sql = "SELECT rt.*, GROUP_CONCAT(CONCAT(s.service_name, '|', s.service_description) SEPARATOR '||') as services FROM tbl_room_type rt LEFT JOIN tbl_room_services rs ON rt.room_type_id = rs.room_type_id LEFT JOIN tbl_services s ON rs.service_id = s.service_id WHERE rt.room_type_id = $room_type_id GROUP BY rt.room_type_id";
    $result = mysqli_query($mycon, $sql);
    if ($result && $result->num_rows > 0) {
        $room = $result->fetch_assoc();
        if ($room['services']) {
            foreach (explode('||', $room['services']) as $service) {
                list($name, $desc) = explode('|', $service);
                $services[] = ['name' => $name, 'desc' => $desc];
            }
        }
    }
}
$room_images = [
    1 => ['standard.avif', 'standard2.avif', 'standard3.avif', 'standard4.jpg', 'standard5.avif'],
    2 => ['deluxe1.jpg', 'deluxe2.avif', 'deluxe3.avif', 'deluxe4.avif', 'deluxe5.avif'],
    3 => ['superior.jpg', 'superior2.jpg', 'superior3.jpg', 'superior4.jpg', 'superior5.jpg'],
    4 => ['family_suite.jpg', 'family_suite2.jpg', 'family_suite3.jpg', 'family_suite4.jpg', 'family_suite5.jpg'],
    5 => ['executive.jpg', 'executive2.jpg', 'executive3.jpg', 'executive4.jpg', 'executive5.jpg'],
    6 => ['presidential.avif', 'presidential2.jpg', 'presidential3.jpg', 'presidential4.jpg', 'presidential5.jpg']
];
$images = $room_images[$room_type_id] ?? ['standard.avif'];
// Fetch payment types
$payment_types = [];
$payment_result = mysqli_query($mycon, "SELECT payment_type_id, payment_name FROM tbl_payment_types");
if ($payment_result && mysqli_num_rows($payment_result) > 0) {
    while ($row = mysqli_fetch_assoc($payment_result)) {
        $payment_types[] = $row;
    }
}
// Fetch wallet balance and other payment accounts if logged in
$wallet_balance = 0;
$user_payment_accounts = [];
$has_non_wallet_payment_method = false;

if (isset($_SESSION['guest_id'])) {
    $guest_id = $_SESSION['guest_id'];
    $sql_accounts = "SELECT account_type, account_number, account_email, balance FROM guest_payment_accounts WHERE guest_id = ?";
    $stmt_accounts = mysqli_prepare($mycon, $sql_accounts);
    mysqli_stmt_bind_param($stmt_accounts, "i", $guest_id);
    mysqli_stmt_execute($stmt_accounts);
    $result_accounts = mysqli_stmt_get_result($stmt_accounts);

    while ($row_account = mysqli_fetch_assoc($result_accounts)) {
        $user_payment_accounts[$row_account['account_type']] = $row_account;
        if ($row_account['account_type'] === 'wallet') {
            $wallet_balance = floatval($row_account['balance']);
        } else {
            $has_non_wallet_payment_method = true;
        }
    }
    mysqli_stmt_close($stmt_accounts);
}

ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);
$admin_id = 1;
$admin_result = $mycon->query("SELECT admin_id FROM tbl_admin LIMIT 1");
if ($admin_result && $admin_result->num_rows > 0) {
    $row = $admin_result->fetch_assoc();
    $admin_id = $row['admin_id'];
}
// After fetching $room, add PHP check for room availability
$room_fully_booked = false;
$no_rooms_available = false;
if ($room_type_id) {
    // Only check if room type is selected
    $sql_count = "SELECT COUNT(*) as total FROM tbl_room WHERE room_type_id = $room_type_id";
    $result_count = mysqli_query($mycon, $sql_count);
    $total_rooms = 0;
    if ($result_count && $row_count = mysqli_fetch_assoc($result_count)) {
        $total_rooms = $row_count['total'];
    }
    if ($total_rooms == 0) {
        $no_rooms_available = true;
    }
    // Default to today for initial check
    $today = date('Y-m-d');
    $sql_booked = "SELECT COUNT(DISTINCT r.room_id) as booked FROM tbl_reservation r WHERE r.room_id IN (SELECT room_id FROM tbl_room WHERE room_type_id = $room_type_id) AND r.status IN ('pending','approved','completed') AND r.check_in < '$today 23:59:59' AND r.check_out > '$today 00:00:00'";
    $result_booked = mysqli_query($mycon, $sql_booked);
    $booked_rooms = 0;
    if ($result_booked && $row_booked = mysqli_fetch_assoc($result_booked)) {
        $booked_rooms = $row_booked['booked'];
    }
    if ($total_rooms > 0 && $booked_rooms >= $total_rooms) {
        $room_fully_booked = true;
    }
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/themes/material_blue.css">
    <title>Book Room</title>
    <style>
        body { background: #1e1e2f; color: #fff; }
        /* Light mode overrides */
        body.light-mode {
            background: #f8f9fa !important;
            color: #23234a !important;
        }
        body.light-mode .booking-container {
            background: #fff !important;
            color: #23234a !important;
        }
        body.light-mode .booking-room-details {
            background: #f7f7fa !important;
            color: #23234a !important;
        }
        body.light-mode .booking-room-details h2,
        body.light-mode .booking-room-details .price {
            color: #ff8c00 !important;
        }
        body.light-mode .booking-room-details .service-item {
            background: #f1f1f1 !important;
            color: #23234a !important;
        }
        body.light-mode .booking-room-details .service-name {
            color: #ff8c00 !important;
        }
        body.light-mode .booking-room-details .service-description {
            color: #666 !important;
        }
        body.light-mode .booking-form-section {
            background: #fff !important;
            color: #23234a !important;
        }
        body.light-mode .form-label, body.light-mode label {
            color: #23234a !important;
        }
        body.light-mode input, body.light-mode select, body.light-mode textarea {
            background: #fff !important;
            color: #23234a !important;
            border: 1px solid #ffe5b4 !important;
        }
        body.light-mode input:focus, body.light-mode select:focus, body.light-mode textarea:focus {
            border-color: #ff8c00 !important;
            box-shadow: 0 0 0 0.12rem rgba(255,140,0,0.13);
        }
        body.light-mode .btn-primary, body.light-mode .btn-warning {
            background: linear-gradient(90deg, #ff8c00, #ffa533) !important;
            color: #fff !important;
            border: none !important;
        }
        body.light-mode .btn-outline-secondary {
            border-color: #ff8c00 !important;
            color: #ff8c00 !important;
        }
        body.light-mode .btn-outline-secondary:hover {
            background: #ff8c00 !important;
            color: #fff !important;
        }
        body.light-mode .alert-info {
            background: #ffe5b4 !important;
            color: #23234a !important;
            border: 1px solid #ffe5b4 !important;
        }
        body.light-mode .alert-danger {
            background: #fff0e1 !important;
            color: #c0392b !important;
            border: 1px solid #ffe5b4 !important;
        }
        body.light-mode .modal-content {
            background: #fff !important;
            color: #23234a !important;
        }
        body.light-mode .modal-header, body.light-mode .modal-footer {
            background: #f7f7fa !important;
            color: #23234a !important;
        }
        body.light-mode .modal-body, body.light-mode .modal-body p, body.light-mode .modal-body ul, body.light-mode .modal-body li, body.light-mode .modal-body strong, body.light-mode .modal-body span {
            color: #23234a !important; /* Ensure all body text is readable */
        }
        body.light-mode #bookingModalReferenceNumberDisplay,
        body.light-mode #cashModalReferenceNumberDisplay {
            color: #23234a !important;
        }
        /* End light mode overrides */
        /* Dark mode modal styles - ensure they are explicitly set */
        .modal-content {
            background: #23234a; /* Dark background for modal content */
            color: #fff; /* White text for modal content */
        }
        .modal-header, .modal-footer {
            background: #1e1e2f; /* Slightly darker background for header/footer */
            color: #fff;
            border-bottom: 1px solid rgba(255,255,255,0.1); /* Subtle border */
            border-top: 1px solid rgba(255,255,255,0.1); /* Subtle border */
        }
        .modal-footer {
            border-top: 1px solid rgba(255,255,255,0.1);
        }
        .modal-body {
            color: #fff; /* White text for modal body */
        }
        /* End dark mode modal styles */
        .booking-container { display: flex; flex-wrap: wrap; gap: 32px; max-width: 1200px; margin: 40px auto; background: #23234a; border-radius: 16px; box-shadow: 0 4px 24px rgba(0,0,0,0.18); padding: 0; }
        .booking-room-details { flex: 1.2; min-width: 340px; background: #18182f; border-radius: 16px 0 0 16px; padding: 36px 32px; display: flex; flex-direction: column; align-items: flex-start; }
        .booking-room-details h2 { color: #FF8C00; font-weight: 700; margin-bottom: 12px; }
        .booking-room-details .price { color: #FF8C00; font-size: 1.3em; font-weight: bold; margin: 18px 0 10px; }
        .booking-room-details .occupancy { color: #bdbdbd; margin-bottom: 10px; }
        .booking-room-details .services-list { margin-top: 18px; }
        .booking-room-details .service-item { background: rgba(255,255,255,0.05); border-radius: 8px; padding: 10px 14px; margin-bottom: 8px; }
        .booking-room-details .service-name { color: #fff; font-weight: 500; }
        .booking-room-details .service-description { color: #bdbdbd; font-size: 0.95em; }
        .booking-gallery { width: 100%; margin-bottom: 18px; }
        .booking-gallery img { width: 100%; height: 220px; object-fit: cover; border-radius: 10px; }
        .booking-form-section { flex: 1; min-width: 340px; background: #23234a; border-radius: 0 16px 16px 0; padding: 36px 32px; }
        @media (max-width: 991px) { .booking-container { flex-direction: column; border-radius: 16px; } .booking-room-details, .booking-form-section { border-radius: 16px 16px 0 0; min-width: unset; padding: 24px 12px; } }
        /* Booking Confirmation Modal Custom Styles */
        #bookingConfirmationModal .modal-content {
            border-radius: 18px;
            border: 2px solid #ff8c00;
            box-shadow: 0 8px 32px rgba(35,35,74,0.18);
            background: linear-gradient(135deg, #23234a 60%, #18182f 100%);
            color: #fff;
        }
        #bookingConfirmationModal .modal-header {
            background: linear-gradient(90deg, #ff8c00 60%, #ffa533 100%);
            color: #fff;
            border-top-left-radius: 16px;
            border-top-right-radius: 16px;
            border-bottom: 1px solid #ffe5b4;
        }
        #bookingConfirmationModal .modal-title {
            font-weight: 700;
            letter-spacing: 1px;
        }
        #bookingConfirmationModal .modal-body {
            background: rgba(255,255,255,0.03);
            color: #fff;
            border-radius: 0 0 12px 12px;
            font-size: 1.08em;
        }
        #bookingConfirmationModal .modal-footer {
            background: #23234a;
            border-top: 1px solid #ffe5b4;
            border-bottom-left-radius: 16px;
            border-bottom-right-radius: 16px;
        }
        #bookingConfirmationModal .btn-primary {
            background: linear-gradient(90deg, #ff8c00, #ffa533);
            border: none;
            font-weight: 600;
            letter-spacing: 0.5px;
        }
        #bookingConfirmationModal .btn-secondary {
            background: #fff;
            color: #ff8c00;
            border: 1px solid #ff8c00;
            font-weight: 600;
        }
        body.light-mode #bookingConfirmationModal .modal-content {
            background: #fff;
            color: #23234a;
            border: 2px solid #ff8c00;
        }
        body.light-mode #bookingConfirmationModal .modal-header {
            background: linear-gradient(90deg, #ff8c00 60%, #ffa533 100%);
            color: #fff;
            border-bottom: 1px solid #ffe5b4;
        }
        body.light-mode #bookingConfirmationModal .modal-body {
            background: #fff8f0;
            color: #23234a;
        }
        body.light-mode #bookingConfirmationModal .modal-footer {
            background: #fff;
            border-top: 1px solid #ffe5b4;
        }
        body.light-mode #bookingConfirmationModal .btn-primary {
            background: linear-gradient(90deg, #ff8c00, #ffa533);
            color: #fff;
        }
        body.light-mode #bookingConfirmationModal .btn-secondary {
            background: #fff;
            color: #ff8c00;
            border: 1px solid #ff8c00;
        }
    </style>
</head>
<body class="<?php echo ($theme_preference === 'light') ? 'light-mode' : ''; ?>">
<?php include('../components/user_navigation.php'); ?>

<div class="booking-container">
    <div class="booking-room-details">
        <?php if ($room): ?>
            <div class="booking-gallery">
                <img src="../assets/rooms/<?php echo htmlspecialchars($images[0]); ?>" alt="<?php echo htmlspecialchars($room['type_name']); ?>">
            </div>
            <h2><?php echo htmlspecialchars($room['type_name']); ?></h2>
            <div class="price">₱<?php echo number_format(isset($room['nightly_rate']) ? $room['nightly_rate'] : 0, 2); ?></div>
            <div class="occupancy"><i class="bi bi-people"></i> Max Occupancy: <?php echo htmlspecialchars($room['max_occupancy']); ?></div>
            <p><?php echo htmlspecialchars($room['description']); ?></p>
            <div class="services-list">
                <h5>Room Inclusions</h5>
                <?php foreach ($services as $service): ?>
                    <div class="service-item">
                        <div class="service-name"><i class="bi bi-check-circle"></i> <?php echo htmlspecialchars($service['name']); ?></div>
                        <div class="service-description"><?php echo htmlspecialchars($service['desc']); ?></div>
                    </div>
                <?php endforeach; ?>
            </div>
        <?php else: ?>
            <p>Room not found.</p>
        <?php endif; ?>
    </div>
    <div class="booking-form-section">
        <h4 class="text-warning fw-bold mb-4">Book this Room</h4>
        <?php if ($no_rooms_available): ?>
            <div class="alert alert-danger mb-3"><i class="bi bi-exclamation-triangle"></i> No rooms are available for this room type. Please contact the hotel or select another room type.</div>
        <?php elseif ($room_fully_booked): ?>
            <div class="alert alert-danger mb-3"><i class="bi bi-exclamation-triangle"></i> All rooms of this type are fully booked or occupied for your selected dates. Please select another room type or date.</div>
        <?php endif; ?>
        <?php if (isset($_SESSION['guest_id']) && $wallet_balance !== null): ?>
            <div class="alert alert-info mb-3"><i class="bi bi-wallet2"></i> Your Wallet Balance: <b>₱<?php echo number_format($wallet_balance, 2); ?></b></div>
            <input type="hidden" id="userWalletBalance" value="<?php echo $wallet_balance; ?>">
        <?php endif; ?>
        <?php if (isset($_SESSION['error'])): ?>
            <div class="alert alert-danger"> <?php echo $_SESSION['error']; unset($_SESSION['error']); ?> </div>
        <?php endif; ?>
        <div id="formErrorMsg" class="alert alert-danger d-none"></div>
        <form id="bookingForm" action="../functions/bookings.php" method="POST" class="bg-secondary-subtle p-4 rounded-3 shadow-sm text-dark needs-validation" novalidate <?php if ($room_fully_booked || $no_rooms_available) echo 'style="pointer-events:none;opacity:0.6;border: 1px solid rgba(255,0,0,0.2);"'; ?>>
            <input type="hidden" name="room_type_id" value="<?php echo htmlspecialchars($room_type_id); ?>">
            <input type="hidden" id="totalAmountRaw" name="total_amount" value="0.00"> <!-- Added for total amount submission -->
            <div class="row g-3">
                <div class="row g-3 mt-1">
                    <div class="col-md-6">
                        <label for="checkInDate" class="form-label">Check-in Date</label>
                        <input type="text" id="checkInDate" name="check_in_date" class="form-control flatpickr" placeholder="Select check-in date" required>
                        <div class="invalid-feedback">Please select a check-in date.</div>
                    </div>
                    <div class="col-md-6">
                        <label for="checkOutDate" class="form-label">Check-out Date</label>
                        <input type="text" id="checkOutDate" name="check_out_date" class="form-control flatpickr" placeholder="Auto-calculated" readonly required>
                        <div class="invalid-feedback">Please select a check-out date.</div>
                    </div>
                </div>
                <div class="row g-3 mt-3">
                    <div class="col-md-6">
                        <label class="form-label">Number of Nights</label>
                        <input type="number" class="form-control" name="number_of_nights" id="number_of_nights" min="1" value="1" required autocomplete="off">
                        <div class="invalid-feedback">Please enter the number of nights.</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Payment Method</label>
                        <select class="form-control" name="payment_id" id="payment_id" required>
                            <option value="">Select Payment Method</option>
                            <?php foreach ($payment_types as $type): ?>
                                <?php
                                    $disabled = '';
                                    $tooltip = '';
                                    $payment_name_lower = strtolower($type['payment_name']);

                                    if ($payment_name_lower === 'wallet' && !isset($_SESSION['guest_id'])) {
                                        $disabled = 'disabled';
                                        $tooltip = 'data-bs-toggle="tooltip" data-bs-placement="top" title="Please log in to use wallet."';
                                    } elseif ($payment_name_lower !== 'wallet' && isset($_SESSION['guest_id'])) {
                                        $account_linked = false;
                                        foreach ($user_payment_accounts as $account_type => $account_data) {
                                            if ($account_type === $payment_name_lower) {
                                                $account_linked = true;
                                                break;
                                            }
                                        }
                                        if (!$account_linked && $payment_name_lower !== 'cash') {
                                            $disabled = 'disabled';
                                            $tooltip = 'data-bs-toggle="tooltip" data-bs-placement="top" title="Please link your ' . htmlspecialchars($type['payment_name']) . ' account in your profile settings."';
                                        }
                                    }
                                ?>
                                <option value="<?php echo htmlspecialchars($type['payment_type_id']); ?>" data-name="<?php echo htmlspecialchars($type['payment_name']); ?>" <?php echo $disabled; ?> <?php echo $tooltip; ?>>
                                    <?php echo htmlspecialchars($type['payment_name']); ?>
                                </option>
                            <?php endforeach; ?>
                        </select>
                        <div class="invalid-feedback">Please select a payment method.</div>
                    </div>
                </div>
                    </div>
            <div id="availabilityMessage" class="mt-3 text-center"></div>
            <div class="d-grid mt-4">
                <button type="submit" id="bookNowBtn" class="btn btn-primary btn-lg" <?php if ($room_fully_booked || $no_rooms_available) echo 'disabled'; ?>>Book Now</button>
            </div>
        </form>
    </div>
</div>

<?php include('../components/footer.php'); ?>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
        const checkInDateInput = document.getElementById('checkInDate');
        const checkOutDateInput = document.getElementById('checkOutDate');
        const numberOfNightsInput = document.getElementById('number_of_nights');
        const roomTypeId = document.querySelector('input[name="room_type_id"]').value;
        const bookNowBtn = document.getElementById('bookNowBtn');
        const availabilityMessage = document.getElementById('availabilityMessage');
        const userWalletBalance = parseFloat(document.getElementById('userWalletBalance') ? document.getElementById('userWalletBalance').value : '0');
        const paymentMethodSelect = document.getElementById('payment_id');
        const totalAmountInput = document.getElementById('totalAmountRaw'); // Use the hidden raw input for total amount
        const formErrorMsg = document.getElementById('formErrorMsg');

        let checkInFlatpickr, checkOutFlatpickr;

        // Initialize Flatpickr instances
        function initializeFlatpickr() {
            checkInFlatpickr = flatpickr(checkInDateInput, {
                dateFormat: "Y-m-d H:i",
                enableTime: true,
                minDate: "today",
                onChange: function(selectedDates, dateStr, instance) {
                    if (selectedDates.length > 0) {
                        calculateCheckoutDate();
                        checkRoomAvailability();
                        calculateNightsAndAmount();
                    }
                }
            });

            checkOutFlatpickr = flatpickr(checkOutDateInput, {
                dateFormat: "Y-m-d H:i",
                enableTime: true,
                noCalendar: false, // Ensure calendar is shown if needed for manual adjustment (though it's readonly)
                enableSeconds: false,
                minDate: new Date(), // Initially set to today, will be updated by calculateCheckoutDate
            });
        }

        // Calculates check-out date based on check-in date and number of nights
        function calculateCheckoutDate() {
            const checkInDateStr = checkInDateInput.value;
            const numberOfNights = parseInt(numberOfNightsInput.value);
            if (checkInDateStr && numberOfNights > 0) {
                const checkInDate = flatpickr.parseDate(checkInDateStr, "Y-m-d H:i");
                if (checkInDate) {
                    const checkOutDate = new Date(checkInDate);
                    checkOutDate.setDate(checkInDate.getDate() + numberOfNights);
                    checkOutDate.setHours(12, 0, 0, 0);
                    checkOutDateInput.value = flatpickr.formatDate(checkOutDate, "Y-m-d H:i");
                    checkOutFlatpickr.setDate(checkOutDate);
                }
            } else {
                checkOutDateInput.value = '';
            }
        }

        // Checks room availability via AJAX
        function checkRoomAvailability() {
            const checkInDate = checkInDateInput.value;
            const checkOutDate = checkOutDateInput.value;

            if (roomTypeId && checkInDate && checkOutDate) {
                // Ensure check-out is strictly after check-in for the check to be valid
                const inDate = flatpickr.parseDate(checkInDate, "Y-m-d H:i");
                const outDate = flatpickr.parseDate(checkOutDate, "Y-m-d H:i");

                if (!inDate || !outDate || outDate <= inDate) {
                    availabilityMessage.innerHTML = '<div class="alert alert-danger"><i class="bi bi-exclamation-triangle"></i> Check-out date must be after check-in date.</div>';
                    bookNowBtn.disabled = true;
                    return;
                }

                $.ajax({
                    url: '../pages/check_room_availability.php',
                    method: 'POST',
                    data: {
                        room_type_id: roomTypeId,
                        check_in_date: checkInDate,
                        check_out_date: checkOutDate
                    },
                    dataType: 'json',
                    success: function(response) {
                        if (response.fully_booked) {
                            availabilityMessage.innerHTML = '<div class="alert alert-danger"><i class="bi bi-exclamation-triangle"></i> ' + response.message + '</div>';
                            bookNowBtn.disabled = true;
                            showFullyBookedToast();
                        } else if (response.available_rooms_count > 0) {
                            availabilityMessage.innerHTML = '<div class="alert alert-success"><i class="bi bi-check-circle"></i> ' + response.message + '</div>';
                            bookNowBtn.disabled = false;
                        } else {
                            availabilityMessage.innerHTML = '<div class="alert alert-warning"><i class="bi bi-info-circle"></i> ' + response.message + '</div>';
                            bookNowBtn.disabled = true;
                        }
                        checkWalletSufficiency(); // Re-check wallet sufficiency after availability check
                    },
                    error: function(xhr, status, error) {
                        console.error('AJAX Error:', status, error);
                        availabilityMessage.innerHTML = '<div class="alert alert-danger"><i class="bi bi-exclamation-octagon"></i> Error checking availability.</div>';
                        bookNowBtn.disabled = true;
                    }
                });
            } else {
                availabilityMessage.innerHTML = '';
                bookNowBtn.disabled = true;
            }
        }

        // Calculates total amount (no auto-adjustment of number of nights)
        function calculateNightsAndAmount() {
            const nightlyRate = parseFloat('<?php echo isset($room['nightly_rate']) ? $room['nightly_rate'] : 0; ?>');
            const numberOfNights = parseInt(numberOfNightsInput.value) || 1;
            const totalAmount = nightlyRate * numberOfNights;
            totalAmountInput.value = totalAmount.toFixed(2);
            checkWalletSufficiency();
        }

        // Checks if wallet balance is sufficient for booking
        function checkWalletSufficiency() {
            const selectedPaymentMethod = paymentMethodSelect.value;
            const totalAmount = parseFloat(totalAmountInput.value);

            if (selectedPaymentMethod === 'wallet') {
                if (userWalletBalance < totalAmount) {
                    formErrorMsg.classList.remove('d-none');
                    formErrorMsg.innerHTML = '<i class="bi bi-currency-dollar"></i> Insufficient wallet balance. Please top-up or choose another payment method.';
                    bookNowBtn.disabled = true;
                } else {
                    formErrorMsg.classList.add('d-none');
                }
            } else {
                formErrorMsg.classList.add('d-none');
            }
            // Re-enable button if no other issues and payment method is not wallet or wallet is sufficient
            // This is crucial: if availability is good AND wallet is sufficient/not used, enable the button
            if (!bookNowBtn.disabled && (selectedPaymentMethod !== 'wallet' || userWalletBalance >= totalAmount)) {
                // Before re-enabling, make sure there are no availability issues as well
                if (!availabilityMessage.innerHTML.includes('alert-danger') && !availabilityMessage.innerHTML.includes('alert-warning')) {
                    bookNowBtn.disabled = false;
                }
            }
        }


        // Event Listeners
        checkInDateInput.addEventListener('change', calculateCheckoutDate);
        checkInDateInput.addEventListener('change', checkRoomAvailability); // Also check availability on check-in change
        checkInDateInput.addEventListener('change', calculateNightsAndAmount); // Also calculate nights and amount on check-in change

        numberOfNightsInput.addEventListener('change', calculateCheckoutDate);
        numberOfNightsInput.addEventListener('input', calculateCheckoutDate); // Also listen to input for real-time changes

        numberOfNightsInput.addEventListener('change', checkRoomAvailability); // Check availability when nights change
        numberOfNightsInput.addEventListener('input', checkRoomAvailability); // Check availability when nights change (real-time)

        numberOfNightsInput.addEventListener('change', calculateNightsAndAmount);
        numberOfNightsInput.addEventListener('input', calculateNightsAndAmount);


        // Initial calls
        initializeFlatpickr();
        // Set an initial check-out date, one night from check-in
        const initialCheckInDate = flatpickr.parseDate(checkInDateInput.value, "Y-m-d H:i");
        if (initialCheckInDate) {
            const initialCheckOutDate = new Date(initialCheckInDate);
            initialCheckOutDate.setDate(initialCheckInDate.getDate() + parseInt(numberOfNightsInput.value));
            initialCheckOutDate.setHours(12, 0, 0, 0);
            checkOutDateInput.value = flatpickr.formatDate(initialCheckOutDate, "Y-m-d H:i");
            checkOutFlatpickr.setDate(initialCheckOutDate);
        }

        calculateCheckoutDate(); // Ensure initial calculation is run
        checkRoomAvailability(); // Ensure initial availability check is run
        calculateNightsAndAmount(); // Ensure initial nights and amount calculation is run
        checkWalletSufficiency(); // Ensure initial wallet sufficiency check is run


        // Re-check availability and wallet sufficiency when payment method changes
        paymentMethodSelect.addEventListener('change', function() {
            checkWalletSufficiency();
            checkRoomAvailability(); // Re-check room availability when payment method changes (for consistency, though not directly related)
        });

        // Form submission handler
        document.getElementById('bookingForm').addEventListener('submit', function(event) {
            // Check for custom validity before submitting
            if (!bookNowBtn.disabled && !this.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
                // Optionally show a generic error message or rely on browser validation messages
            }
            this.classList.add('was-validated'); // Apply Bootstrap validation styles

            // Additional check for wallet sufficiency on submit
            const selectedPaymentMethod = paymentMethodSelect.value;
            const totalAmount = parseFloat(totalAmountInput.value);
            if (selectedPaymentMethod === 'wallet' && userWalletBalance < totalAmount) {
                event.preventDefault(); // Prevent form submission
                formErrorMsg.classList.remove('d-none');
                formErrorMsg.innerHTML = '<i class="bi bi-currency-dollar"></i> Insufficient wallet balance. Please top-up or choose another payment method.';
                // Do not re-enable bookNowBtn here, as it should remain disabled if wallet is insufficient
            }
        });


        // Handle tooltips for disabled payment options
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });

        // Booking Confirmation Modal
        const bookingModal = new bootstrap.Modal(document.getElementById('bookingConfirmationModal'));
        const cashPaymentModal = new bootstrap.Modal(document.getElementById('cashPaymentModal'));
        const bookingForm = document.getElementById('bookingForm');
        const confirmBtnPayment = document.getElementById('confirmBtnPayment');
        const confirmBtnCash = document.getElementById('confirmBtnCash');

        bookingForm.addEventListener('submit', function(e) {
            e.preventDefault(); // Prevent default form submission

            const totalAmount = parseFloat(totalAmountInput.value);
            const paymentMethodName = paymentMethodSelect.options[paymentMethodSelect.selectedIndex].getAttribute('data-name');

            // Set values in the confirmation modal
            document.getElementById('modalRoomType').textContent = '<?php echo htmlspecialchars($room['type_name']); ?>';
            document.getElementById('modalCheckIn').textContent = checkInDateInput.value;
            document.getElementById('modalCheckOut').textContent = checkOutDateInput.value;
            document.getElementById('modalNights').textContent = numberOfNightsInput.value;
            document.getElementById('modalPaymentMethod').textContent = paymentMethodName;
            document.getElementById('modalTotalAmount').textContent = '₱' + totalAmount.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2});

            // Set values for cash payment modal if applicable
            document.getElementById('modalRoomTypeCash').textContent = '<?php echo htmlspecialchars($room['type_name']); ?>';
            document.getElementById('modalCheckInCash').textContent = checkInDateInput.value;
            document.getElementById('modalCheckOutCash').textContent = checkOutDateInput.value;
            document.getElementById('modalNightsCash').textContent = numberOfNightsInput.value;
            document.getElementById('modalTotalAmountCash').textContent = '₱' + totalAmount.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2});


            // Show appropriate modal
            if (paymentMethodName === 'Cash') {
                cashPaymentModal.show();
            } else {
                bookingModal.show();
            }
        });

        confirmBtnPayment.addEventListener('click', function(e) {
            e.preventDefault();
            // Temporarily remove novalidate to allow browser to check validity again for submit
            bookingForm.removeAttribute('novalidate');
            bookingForm.submit(); // Submit the form after confirmation
        });

        confirmBtnCash.addEventListener('click', function(e) {
            e.preventDefault();
            bookingForm.removeAttribute('novalidate');
            bookingForm.submit(); // Submit the form after confirmation
        });

        // Force default value to 1 on page load
        numberOfNightsInput.value = 1;
        // Also reset to 1 if the form is reset
        document.getElementById('bookingForm').addEventListener('reset', function() {
            numberOfNightsInput.value = 1;
        });

        function showFullyBookedToast() {
            var toastEl = document.getElementById('fullyBookedToast');
            if (toastEl) {
                var toast = new bootstrap.Toast(toastEl, { delay: 4000 });
                toast.show();
            }
        }
    });
</script>

<!-- Modals -->
<!-- Booking Confirmation Modal -->
<div class="modal fade" id="bookingConfirmationModal" tabindex="-1" aria-labelledby="bookingConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookingConfirmationModalLabel">Confirm Your Booking</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Please review your booking details:</p>
                <ul>
                    <li><strong>Room Type:</strong> <span id="modalRoomType"></span></li>
                    <li><strong>Check-in Date:</strong> <span id="modalCheckIn"></span></li>
                    <li><strong>Check-out Date:</strong> <span id="modalCheckOut"></span></li>
                    <li><strong>Number of Nights:</strong> <span id="modalNights"></span></li>
                    <li><strong>Payment Method:</strong> <span id="modalPaymentMethod"></span></li>
                    <li><strong>Total Amount:</strong> <span id="modalTotalAmount"></span></li>
                </ul>
                <p>By clicking "Confirm Booking", you agree to our terms and conditions.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmBtnPayment">Confirm Booking</button>
            </div>
        </div>
    </div>
</div>

<!-- Cash Payment Modal -->
<div class="modal fade" id="cashPaymentModal" tabindex="-1" aria-labelledby="cashPaymentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cashPaymentModalLabel">Cash Payment Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Your booking details:</p>
                <ul>
                    <li><strong>Room Type:</strong> <span id="modalRoomTypeCash"></span></li>
                    <li><strong>Check-in Date:</strong> <span id="modalCheckInCash"></span></li>
                    <li><strong>Check-out Date:</strong> <span id="modalCheckOutCash"></span></li>
                    <li><strong>Number of Nights:</strong> <span id="modalNightsCash"></span></li>
                    <li><strong>Total Amount:</strong> <span id="modalTotalAmountCash"></span></li>
                </ul>
                <p>Please note: For cash payments, the booking will be confirmed upon physical payment at the hotel. A reference number will be provided. Please present this reference number when you make your payment.</p>
                <div class="alert alert-info" id="cashModalReferenceNumberDisplay"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="confirmBtnCash">Confirm Cash Booking</button>
            </div>
        </div>
    </div>
</div>

<!-- Toast Notification -->
<div class="position-fixed top-0 end-0 p-3" style="z-index: 2000">
  <div id="fullyBookedToast" class="toast align-items-center text-bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
      <div class="toast-body">
        <i class="bi bi-exclamation-triangle me-2"></i>
        The selected date is fully booked. Please choose another date or room type.
      </div>
      <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
  </div>
</div>

</body>
</html> 